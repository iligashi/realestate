{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: token => api.get('/auth/profile', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  updateProfile: (profileData, token) => {\n    // If profileData is FormData (has profile picture), don't set Content-Type\n    // Let the browser set it with the boundary\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n\n    // Only set Content-Type if it's not FormData\n    if (!(profileData instanceof FormData)) {\n      config.headers['Content-Type'] = 'application/json';\n    }\n    return api.put('/auth/profile', profileData, config);\n  },\n  changePassword: passwordData => api.put('/auth/change-password', passwordData),\n  logout: () => api.post('/auth/logout')\n};\n\n// Property API\nexport const propertyAPI = {\n  getProperties: (filters = {}) => api.get('/properties', {\n    params: filters\n  }),\n  getProperty: id => api.get(`/properties/${id}`),\n  createProperty: (propertyData, token) => api.post('/properties', propertyData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  updateProperty: (id, propertyData, token) => api.put(`/properties/${id}`, propertyData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  deleteProperty: (id, token) => api.delete(`/properties/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  getUserProperties: token => api.get('/properties/user/my-properties', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n};\n\n// User API\nexport const userAPI = {\n  getAllUsers: token => api.get('/users', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  getUserById: (id, token) => api.get(`/users/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  updateUser: (id, userData, token) => api.put(`/users/${id}`, userData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  deleteUser: (id, token) => api.delete(`/users/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  toggleUserBlock: (id, token) => api.patch(`/users/${id}/toggle-block`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  getUserStats: token => api.get('/users/stats', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getProfile","get","updateProfile","profileData","FormData","put","changePassword","passwordData","logout","propertyAPI","getProperties","filters","params","getProperty","id","createProperty","propertyData","updateProperty","deleteProperty","delete","getUserProperties","userAPI","getAllUsers","getUserById","updateUser","deleteUser","toggleUserBlock","patch","getUserStats"],"sources":["C:/Users/IlazG/Desktop/projects/Real-Estate/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getProfile: (token) => api.get('/auth/profile', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  updateProfile: (profileData, token) => {\r\n    // If profileData is FormData (has profile picture), don't set Content-Type\r\n    // Let the browser set it with the boundary\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n    \r\n    // Only set Content-Type if it's not FormData\r\n    if (!(profileData instanceof FormData)) {\r\n      config.headers['Content-Type'] = 'application/json';\r\n    }\r\n    \r\n    return api.put('/auth/profile', profileData, config);\r\n  },\r\n  changePassword: (passwordData) => api.put('/auth/change-password', passwordData),\r\n  logout: () => api.post('/auth/logout'),\r\n};\r\n\r\n// Property API\r\nexport const propertyAPI = {\r\n  getProperties: (filters = {}) => api.get('/properties', { params: filters }),\r\n  getProperty: (id) => api.get(`/properties/${id}`),\r\n  createProperty: (propertyData, token) => api.post('/properties', propertyData, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  updateProperty: (id, propertyData, token) => api.put(`/properties/${id}`, propertyData, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  deleteProperty: (id, token) => api.delete(`/properties/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  getUserProperties: (token) => api.get('/properties/user/my-properties', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n};\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getAllUsers: (token) => api.get('/users', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  getUserById: (id, token) => api.get(`/users/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  updateUser: (id, userData, token) => api.put(`/users/${id}`, userData, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  deleteUser: (id, token) => api.delete(`/users/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  toggleUserBlock: (id, token) => api.patch(`/users/${id}/toggle-block`, {}, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n  getUserStats: (token) => api.get('/users/stats', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}